// Code generated by go-swagger; DO NOT EDIT.

// SPDX-FileCopyrightText: 2023 Siemens AG
//
// SPDX-License-Identifier: Apache-2.0
//

package northbound

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// GetJobsIDStatusHandlerFunc turns a function with the right signature into a get jobs ID status handler
type GetJobsIDStatusHandlerFunc func(GetJobsIDStatusParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetJobsIDStatusHandlerFunc) Handle(params GetJobsIDStatusParams) middleware.Responder {
	return fn(params)
}

// GetJobsIDStatusHandler interface for that can handle valid get jobs ID status params
type GetJobsIDStatusHandler interface {
	Handle(GetJobsIDStatusParams) middleware.Responder
}

// NewGetJobsIDStatus creates a new http.Handler for the get jobs ID status operation
func NewGetJobsIDStatus(ctx *middleware.Context, handler GetJobsIDStatusHandler) *GetJobsIDStatus {
	return &GetJobsIDStatus{Context: ctx, Handler: handler}
}

/*
	GetJobsIDStatus swagger:route GET /jobs/{id}/status northbound getJobsIdStatus

# Get job status

Retrieve the job status
*/
type GetJobsIDStatus struct {
	Context *middleware.Context
	Handler GetJobsIDStatusHandler
}

func (o *GetJobsIDStatus) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewGetJobsIDStatusParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
