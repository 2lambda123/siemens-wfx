// Code generated by go-swagger; DO NOT EDIT.

// SPDX-FileCopyrightText: 2023 Siemens AG
//
// SPDX-License-Identifier: Apache-2.0
//

package northbound

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
	"github.com/siemens/wfx/generated/model"
)

// PostWorkflowsCreatedCode is the HTTP code returned for type PostWorkflowsCreated
const PostWorkflowsCreatedCode int = 201

/*
PostWorkflowsCreated Workflow was created

swagger:response postWorkflowsCreated
*/
type PostWorkflowsCreated struct {

	/*
	  In: Body
	*/
	Payload *model.Workflow `json:"body,omitempty"`
}

// NewPostWorkflowsCreated creates PostWorkflowsCreated with default headers values
func NewPostWorkflowsCreated() *PostWorkflowsCreated {

	return &PostWorkflowsCreated{}
}

// WithPayload adds the payload to the post workflows created response
func (o *PostWorkflowsCreated) WithPayload(payload *model.Workflow) *PostWorkflowsCreated {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post workflows created response
func (o *PostWorkflowsCreated) SetPayload(payload *model.Workflow) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostWorkflowsCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(201)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostWorkflowsBadRequestCode is the HTTP code returned for type PostWorkflowsBadRequest
const PostWorkflowsBadRequestCode int = 400

/*
PostWorkflowsBadRequest Bad Request

swagger:response postWorkflowsBadRequest
*/
type PostWorkflowsBadRequest struct {

	/*
	  In: Body
	*/
	Payload *model.ErrorResponse `json:"body,omitempty"`
}

// NewPostWorkflowsBadRequest creates PostWorkflowsBadRequest with default headers values
func NewPostWorkflowsBadRequest() *PostWorkflowsBadRequest {

	return &PostWorkflowsBadRequest{}
}

// WithPayload adds the payload to the post workflows bad request response
func (o *PostWorkflowsBadRequest) WithPayload(payload *model.ErrorResponse) *PostWorkflowsBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post workflows bad request response
func (o *PostWorkflowsBadRequest) SetPayload(payload *model.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostWorkflowsBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*
PostWorkflowsDefault Other error with any status code and response body format.

swagger:response postWorkflowsDefault
*/
type PostWorkflowsDefault struct {
	_statusCode int
}

// NewPostWorkflowsDefault creates PostWorkflowsDefault with default headers values
func NewPostWorkflowsDefault(code int) *PostWorkflowsDefault {
	if code <= 0 {
		code = 500
	}

	return &PostWorkflowsDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the post workflows default response
func (o *PostWorkflowsDefault) WithStatusCode(code int) *PostWorkflowsDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the post workflows default response
func (o *PostWorkflowsDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WriteResponse to the client
func (o *PostWorkflowsDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(o._statusCode)
}
