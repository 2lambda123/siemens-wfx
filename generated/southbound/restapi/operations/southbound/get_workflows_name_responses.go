// Code generated by go-swagger; DO NOT EDIT.

// SPDX-FileCopyrightText: 2023 Siemens AG
//
// SPDX-License-Identifier: Apache-2.0
//

package southbound

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
	"github.com/siemens/wfx/generated/model"
)

// GetWorkflowsNameOKCode is the HTTP code returned for type GetWorkflowsNameOK
const GetWorkflowsNameOKCode int = 200

/*
GetWorkflowsNameOK Workflow description with the provided key

swagger:response getWorkflowsNameOK
*/
type GetWorkflowsNameOK struct {

	/*
	  In: Body
	*/
	Payload *model.Workflow `json:"body,omitempty"`
}

// NewGetWorkflowsNameOK creates GetWorkflowsNameOK with default headers values
func NewGetWorkflowsNameOK() *GetWorkflowsNameOK {

	return &GetWorkflowsNameOK{}
}

// WithPayload adds the payload to the get workflows name o k response
func (o *GetWorkflowsNameOK) WithPayload(payload *model.Workflow) *GetWorkflowsNameOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get workflows name o k response
func (o *GetWorkflowsNameOK) SetPayload(payload *model.Workflow) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetWorkflowsNameOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetWorkflowsNameBadRequestCode is the HTTP code returned for type GetWorkflowsNameBadRequest
const GetWorkflowsNameBadRequestCode int = 400

/*
GetWorkflowsNameBadRequest If request is invalid

swagger:response getWorkflowsNameBadRequest
*/
type GetWorkflowsNameBadRequest struct {

	/*
	  In: Body
	*/
	Payload *model.ErrorResponse `json:"body,omitempty"`
}

// NewGetWorkflowsNameBadRequest creates GetWorkflowsNameBadRequest with default headers values
func NewGetWorkflowsNameBadRequest() *GetWorkflowsNameBadRequest {

	return &GetWorkflowsNameBadRequest{}
}

// WithPayload adds the payload to the get workflows name bad request response
func (o *GetWorkflowsNameBadRequest) WithPayload(payload *model.ErrorResponse) *GetWorkflowsNameBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get workflows name bad request response
func (o *GetWorkflowsNameBadRequest) SetPayload(payload *model.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetWorkflowsNameBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetWorkflowsNameNotFoundCode is the HTTP code returned for type GetWorkflowsNameNotFound
const GetWorkflowsNameNotFoundCode int = 404

/*
GetWorkflowsNameNotFound Not Found

swagger:response getWorkflowsNameNotFound
*/
type GetWorkflowsNameNotFound struct {

	/*
	  In: Body
	*/
	Payload *model.ErrorResponse `json:"body,omitempty"`
}

// NewGetWorkflowsNameNotFound creates GetWorkflowsNameNotFound with default headers values
func NewGetWorkflowsNameNotFound() *GetWorkflowsNameNotFound {

	return &GetWorkflowsNameNotFound{}
}

// WithPayload adds the payload to the get workflows name not found response
func (o *GetWorkflowsNameNotFound) WithPayload(payload *model.ErrorResponse) *GetWorkflowsNameNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get workflows name not found response
func (o *GetWorkflowsNameNotFound) SetPayload(payload *model.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetWorkflowsNameNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*
GetWorkflowsNameDefault Other error with any status code and response body format.

swagger:response getWorkflowsNameDefault
*/
type GetWorkflowsNameDefault struct {
	_statusCode int
}

// NewGetWorkflowsNameDefault creates GetWorkflowsNameDefault with default headers values
func NewGetWorkflowsNameDefault(code int) *GetWorkflowsNameDefault {
	if code <= 0 {
		code = 500
	}

	return &GetWorkflowsNameDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the get workflows name default response
func (o *GetWorkflowsNameDefault) WithStatusCode(code int) *GetWorkflowsNameDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the get workflows name default response
func (o *GetWorkflowsNameDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WriteResponse to the client
func (o *GetWorkflowsNameDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(o._statusCode)
}
