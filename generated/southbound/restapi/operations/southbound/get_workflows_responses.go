// Code generated by go-swagger; DO NOT EDIT.

// SPDX-FileCopyrightText: 2023 Siemens AG
//
// SPDX-License-Identifier: Apache-2.0
//

package southbound

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
	"github.com/siemens/wfx/generated/model"
)

// GetWorkflowsOKCode is the HTTP code returned for type GetWorkflowsOK
const GetWorkflowsOKCode int = 200

/*
GetWorkflowsOK A list of workflows

swagger:response getWorkflowsOK
*/
type GetWorkflowsOK struct {

	/*
	  In: Body
	*/
	Payload *model.PaginatedWorkflowList `json:"body,omitempty"`
}

// NewGetWorkflowsOK creates GetWorkflowsOK with default headers values
func NewGetWorkflowsOK() *GetWorkflowsOK {

	return &GetWorkflowsOK{}
}

// WithPayload adds the payload to the get workflows o k response
func (o *GetWorkflowsOK) WithPayload(payload *model.PaginatedWorkflowList) *GetWorkflowsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get workflows o k response
func (o *GetWorkflowsOK) SetPayload(payload *model.PaginatedWorkflowList) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetWorkflowsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*
GetWorkflowsDefault Other error with any status code and response body format.

swagger:response getWorkflowsDefault
*/
type GetWorkflowsDefault struct {
	_statusCode int
}

// NewGetWorkflowsDefault creates GetWorkflowsDefault with default headers values
func NewGetWorkflowsDefault(code int) *GetWorkflowsDefault {
	if code <= 0 {
		code = 500
	}

	return &GetWorkflowsDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the get workflows default response
func (o *GetWorkflowsDefault) WithStatusCode(code int) *GetWorkflowsDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the get workflows default response
func (o *GetWorkflowsDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WriteResponse to the client
func (o *GetWorkflowsDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(o._statusCode)
}
